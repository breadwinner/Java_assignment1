Scenario : Pay tuition
Description : A student wants to pay his tuition through myNEU account.

Objects (with Behaviors and State): 
	Object : Student
		State : name, student_ID, password
		Behavior : visitWebsite(), loginToAccount(), checkBillInfo(), payTuitionToWebsite()
	
	
	Object : UniversityWebsite
		State : Collection of Bill
		Behavior : displayCurrentBill(),  acceptPaymentFromStudent(), sendConfirmationToStudent()
	
	Object : Bill
		State : name, price, credit
		Behavior : getPrice(), getCredit()
	
	Object : Money
		state : amount	

class Student{
	String name;
	Int student_ID;
	String password;
	void visitWebsite(UniversityWebsite uw){}
	void loginToAccount(){}
	Bill CheckBillInfo(Bill bills[]){}
	Money payTuitionToWebsite(UniversityWebsite uw){}
	
}

class UniversityWebsite{
	Bill[] bills; 
	Bill[] displayCurrentBill(){}
	void shipABookToConsumer(Consumer c, Book b){}
	void acceptMoneyFromConsumer(Consumer c, Money money){}
			
}

class Book{
	String name, author;
	Float price;
	Float getPrice(){}
	String getName(){}

}

class Money{
	float amount;
}

class ShoppingOnline{
	public static void main(String args[]){
		ShoppingWebsite amazon = new ShoppingWebsite();

		Book headFirstJava = new Book();headFirstJava.name = "Head First Java";
		Book thinkingJava = new Book();thinkingJava = "Thinking In Java";
		Book[] books = {headFirstJava, thinkingJava};

		Consumer michael = new Consumer();
		michael.name = "Michael";
		
		michael.visitsWebsite(amazon);
		Book[] books = amazon.displayAvailableBooks();
		Book book = michael.findTheBookInterestedIn( books , amazon);
		michael.placeOrderForBook(book, amazon)
		Money money = michael.payMoneyToWebsite(amazon);
		amazon.acceptMoneyFromConsumer(michael, money);
	}

}
